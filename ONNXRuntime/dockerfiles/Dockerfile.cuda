FROM nvcr.io/nvidia/cuda:12.6.3-cudnn-devel-ubuntu22.04 AS build
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update
RUN apt-get install -y git build-essential python3-dev python3-pip
RUN pip3 install "cmake<4" numpy packaging setuptools wheel

# Install ONNXRuntime: build-wheel needs python3-dev, numpy, packaging, setuptools, wheel
ENV ORT_INSTALL_DIR=/onnxruntime
ENV ORT_RELEASE_TAG=v1.21.1
RUN git clone --recursive -b $ORT_RELEASE_TAG https://github.com/microsoft/onnxruntime.git /tmp/onnxruntime

ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
RUN cd /tmp/onnxruntime && \
    ./build.sh --config Release \
    --allow_running_as_root \
    --build_shared_lib \
    --cuda_home /usr/local/cuda \
    --cudnn_home /usr/lib/x86_64-linux-gnu/ \
    --use_cuda \
    --build_wheel \
    --update \
    --parallel \
    --skip_tests \
    --cmake_extra_defines \
    CMAKE_INSTALL_PREFIX=$ORT_INSTALL_DIR \
    onnxruntime_BUILD_UNIT_TESTS=OFF \
    CMAKE_OSX_ARCHITECTURES="x86_64" \
    CMAKE_CUDA_ARCHITECTURES="89" # RTX 4090
RUN cd /tmp/onnxruntime/build/Linux/Release && \
    make -j$(nproc) && make install && ldconfig

# For some reason, build_wheel above doesn't work, so we build the wheel manually
RUN cd /tmp/onnxruntime/build/Linux/Release && \
    python3 /tmp/onnxruntime/setup.py bdist_wheel && \
    cp dist/*.whl $ORT_INSTALL_DIR

FROM nvcr.io/nvidia/cuda:12.6.3-cudnn-devel-ubuntu22.04 AS onnxruntime
# Creating a non-root user
ARG USERNAME=dev
ARG USER_UID=1000
ARG USER_GID=1003

RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    #
    # [Optional] Add sudo support. Omit if you don't need to install software after connecting.
    && apt-get update \
    && apt-get install -y sudo git \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# [Optional] Set the default user. Omit if you want to keep the default as root.
RUN mkdir -p /workspace && chown -R $USER_UID:$USER_GID /workspace
USER $USERNAME

ENV ORT_INSTALL_DIR=/onnxruntime
COPY --from=build $ORT_INSTALL_DIR $ORT_INSTALL_DIR

# OpenCV
ENV OPENCV_INSTALL_DIR=/opencv
COPY --from=opencv-cpu $OPENCV_INSTALL_DIR $OPENCV_INSTALL_DIR

RUN sudo apt-get install -y python3 python3-pip ffmpeg
RUN pip3 install $ORT_INSTALL_DIR/*.whl

# To use opencv in python
RUN pip3 install numpy
RUN sudo ln -s $OPENCV_INSTALL_DIR/lib/python3.10/dist-packages/cv2 /usr/local/lib/python3.10/dist-packages/cv2

RUN sudo -H pip3 install cmake