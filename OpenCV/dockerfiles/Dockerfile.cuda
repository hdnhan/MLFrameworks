FROM nvcr.io/nvidia/cuda:12.1.1-cudnn8-devel-ubuntu22.04 AS build
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update
RUN apt-get install -y git build-essential python3-dev python3-pip
# Video I/O dependencies
RUN apt-get install -y pkg-config libavcodec-dev libavformat-dev libswscale-dev
RUN pip3 install "cmake<4" numpy

# Install opencv: python version needs python3-dev, numpy
ENV OPENCV_INSTALL_DIR=/opencv
ENV OPENCV_RELEASE_TAG=4.10.0
RUN git clone --recursive -b $OPENCV_RELEASE_TAG https://github.com/opencv/opencv.git /tmp/opencv
RUN git clone --recursive -b $OPENCV_RELEASE_TAG https://github.com/opencv/opencv_contrib.git /tmp/opencv_contrib

RUN cd /tmp/opencv && mkdir -p build && cd build && \
    cmake -S .. -B . \
    -DCMAKE_BUILD_TYPE=RELEASE \
    -DCMAKE_INSTALL_PREFIX=$OPENCV_INSTALL_DIR \
    -DBUILD_TESTS=OFF \
    -DBUILD_PERF_TESTS=OFF \
    -DINSTALL_PYTHON_EXAMPLES=OFF \
    -DINSTALL_C_EXAMPLES=OFF \
    -DBUILD_EXAMPLES=OFF \
    -DOPENCV_ENABLE_NONFREE=ON \
    -DPYTHON3_EXECUTABLE=$(which python3) \
    -DWITH_CUDA=ON \
    -DOPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules && \
    make -j$(nproc) && \
    make install && \
    ldconfig

# Because we later compile OpenCV which needs cuda-dev
# C++: after compilation, just need cuda-runtime to run
# Python: can use cuda-runtime to run directly
# FROM nvcr.io/nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04 AS opencv
FROM nvcr.io/nvidia/cuda:12.1.1-cudnn8-devel-ubuntu22.04 AS opencv
# Creating a non-root user
ARG USERNAME=dev
ARG USER_UID=1000
ARG USER_GID=1003

RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    #
    # [Optional] Add sudo support. Omit if you don't need to install software after connecting.
    && apt-get update \
    && apt-get install -y sudo git \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# [Optional] Set the default user. Omit if you want to keep the default as root.
RUN mkdir -p /workspace && chown -R $USER_UID:$USER_GID /workspace
USER $USERNAME

ENV OPENCV_INSTALL_DIR=/opencv
COPY --from=build $OPENCV_INSTALL_DIR $OPENCV_INSTALL_DIR

# To use opencv in python
RUN sudo apt-get install -y python3 python3-pip ffmpeg
RUN pip3 install numpy
RUN sudo ln -s $OPENCV_INSTALL_DIR/lib/python3.10/dist-packages/cv2 /usr/local/lib/python3.10/dist-packages/cv2

# To compile opencv with cpp code
RUN sudo -H pip3 install cmake
